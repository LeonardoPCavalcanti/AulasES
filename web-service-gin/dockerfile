# Etapa 1: Build
FROM golang:1.20-alpine AS builder

# Define o diretório de trabalho
WORKDIR /app

# Copia os arquivos de dependências primeiro (cache das dependências)
COPY go.mod go.sum ./
RUN go mod download

# Copia o restante do código para dentro do container
COPY . .

# Compila o binário
RUN go build -o aulasES .

# Etapa 2: Imagem final para execução
FROM alpine:latest

# Instala dependências básicas (opcional, para logs e depuração)
RUN apk --no-cache add ca-certificates

WORKDIR /app

# Copia o binário da etapa de build
COPY --from=builder /app/aulasES .

# Cria o diretório para logs se não existir
RUN mkdir -p /app/my-data

# Define o volume para persistência dos logs
VOLUME /app/my-data

# Expõe a porta que sua aplicação utiliza
EXPOSE 8080

# Comando padrão para executar
CMD ["./aulasES"]
